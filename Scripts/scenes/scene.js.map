{"version":3,"sources":["scenes/scene.ts"],"names":[],"mappings":";;;;;AAAA,IAAO,MAAM,CA4CZ;AA5CD,WAAO,MAAM,EAAC,CAAC;IACX;;;;OAIG;IACH;QAA2B,yBAAa;QACpC;;WAEG;QACH;YACI,iBAAO,CAAC;QACZ,CAAC;QAED;;;;;WAKG;QACI,qBAAK,GAAZ;QAEA,CAAC;QAED;;;;;WAKG;QACI,sBAAM,GAAb;QAEA,CAAC;QAED;;;;;WAKG;QACI,sBAAM,GAAb;QAEA,CAAC;QACL,YAAC;IAAD,CArCA,AAqCC,CArC0B,OAAO,CAAC,KAAK,GAqCvC;IArCY,YAAK,QAqCjB,CAAA;AACL,CAAC,EA5CM,MAAM,KAAN,MAAM,QA4CZ","file":"scenes/scene.js","sourcesContent":["module scenes {\n    /**\n     * The Scene class is a generic / custom Scene container\n     * \n     * @class Scene\n     */\n    export class Scene extends Physijs.Scene {\n        /**\n         * @constructor \n         */\n        constructor() {\n            super();\n        }\n\n        /**\n         * The start method is the main method for the scene class\n         * \n         * @method start\n         * @return void\n         */\n        public start(): void {\n\n        }\n        \n        /**\n         * The update method updates the animation loop and other objects\n         * \n         * @method update\n         * @return void\n         */\n        public update(): void {\n            \n        }\n        \n        /**\n         * The resize method is a procedure that sets variables and objects on screen resize\n         * \n         * @method resize\n         * @return void\n         */\n        public resize():void {\n            \n        }\n    }\n}"],"sourceRoot":"/source/"}